name: RootHub Manage Hub CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '*/8 * * * *'   # every 8 minutes (UTC)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug — runner info
        run: |
          uname -a
          lsb_release -a || true
          echo "GITHUB_RUN_ID=$GITHUB_RUN_ID"

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          check-latest: true

      - name: Show python
        run: |
          which python
          python --version
          python -m pip --version

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: |
          python manage.py test

      - name: Deploy to Render (after tests pass)
        if: github.ref == 'refs/heads/master' && secrets.RENDER_SERVICE_ID != '' && secrets.RENDER_API_KEY != ''
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "Triggering Render deployment..."
          curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY"
          echo "✅ Render deployment triggered successfully!"

  wake_render:
    # only run on scheduled events and only if a ping URL secret is configured
    if: github.event_name == 'schedule' && secrets.RENDER_PING_URL != ''
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Wake Render (ping service URL stored in secret)
        env:
          RENDER_PING_URL: ${{ secrets.RENDER_PING_URL }}
        run: |
          set -euo pipefail
          echo "Pinging Render service to keep it awake..."
          # try up to 5 times with backoff
          attempt=0
          max=5
          while [ $attempt -lt $max ]; do
            attempt=$((attempt + 1))
            if curl --fail --silent --show-error --max-time 10 "${RENDER_PING_URL}"; then
              echo "Ping successful (attempt $attempt)"
              exit 0
            else
              echo "Ping attempt $attempt failed"
              sleep $((attempt * 2))
            fi
          done
          echo "All ping attempts failed"
          exit 1